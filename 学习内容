一，

事件event 

在谷歌浏览器的开发者工具中，有一个Console(控制台)
可以在这里查看代码错误，红字就是错误

js代码的编写位置：
第一个位置：和css内联的位置一样
例如：
<button id="btn" onclick="alert('我被点击了！')">点我</button>
第二个位置：写在body结束标签的上面
用<script>标签
第三个位置：写在单独的js文件里
在html中声明它的路径

在js中变量名定义区分大小写，小写和大写不一样
同样的变量名也区分大小写

如果想把语句放到一行，必须用分号相隔，不然会报错
至于为什么要把代码放到一行？
因为就连一个空格 一个回车都是占空间的 为了提高网页加载速度 会采用这种放在一行的方式
当每一条语句不在同一行，正常js不加分号也不报错，但是建议加上

注释：
单行注释：
//
多行注释：
/*
 *
 */
文档注释：(用来做函数的注释，直接在函数上方/**敲回车就可以)(java中也有这个注释)
/**
 *
 *@param
 */
param 为 parameter 的简写 ，这个单词为参数的意思
例如：
/**
 * 这是一个演示函数
 * @param {string} name 用户姓名
 * @param {number} age  用户年龄
 */
function test(name,age){

}
{}里面的内容可以写参数类型

二，

变量
基本的注意事项和写法都和C语言差不多

变量名的命名规则：
名称可包含字母，数字，下划线和美元符号
名称必须以字母开头
名称也可以 $ 和 _ 开头(但是在本教程中我们不会这么做)
名称对大小写敏感(y和Y是不同的变量)
保留字(比如JavaScript的关键字)无法用作变量名称

var = variable（可变的） 变量的意思
定义的时候直接用var就可以定义所有类型

变量命名规范：
驼峰式：首字母小写，接下来的字母都以大写字母开头。
例如：myTestValue
Pascal 标记法： 首字母是大写的，接下来的字母都是大写的
例如：MyTestValue
匈牙利式：在以Pascal命名的基础上，变量前加一个小写字母，说明该变量的类型
例如：i表示整数 iMyTestValue
如下表：
类型                           前缀
数组                            a
布尔型                          b
浮点型(数字)                    f 
函数                           fn 
整形(数字)                      i 
对象                            o 
正则表达式                      re
字符串                          s 
变型(可以是任何类型)             v 

ECMAScript 原始类型：
有5种：即Undefined,Null,Boolean,Number和String

三，

对象(Object)       一切皆对象
特征+行为 = 属性+方法 = 对象

面向对象的三大特征：
Object-Oriented Analysis(OOA)  面向对象的分析
Object-Oriented Design(OOD)  面向对象的设计
Object-Oriented Programming(OOP)  面向对象的编程

this只能在当前指向的方法中使用
自己定义的变量可以在任何位置使用

数组(Array)
数组中比较常见的方法：
push();     在数组的最后面增加一个值,并返回新的长度
pop();      删除并返回数组的最后一个元素
unshift();  在数组的最前面增加一个值,并返回新的长度
shift();    删除并返回数组的第一个元素
splice();   删除元素，并向数组添加新元素
以上这些是常用的，还有很多，通过借鉴手册









